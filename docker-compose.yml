services:
  nginx:
    image: nginx:1.21-alpine
    restart: on-failure
    depends_on:
      - telegram-api-server
    ports:
      - "80:80"
    volumes:
      - telegram-bot-api-data:/var/lib/telegram-bot-api
      - ./nginx:/etc/nginx/conf.d/

  telegram-api-server:
    image: aiogram/telegram-bot-api:latest
    restart: on-failure
    env_file:
      - .env
    volumes:
      - telegram-bot-api-data:/var/lib/telegram-bot-api
    ports:
      - "8081:8081"

  postgres_db:
    image: postgres:latest
    restart: always
    container_name: postgres-container
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  redis:
    image: redis:latest
    restart: always
    container_name: redis-container
    command: [ "redis-server", "--requirepass", "${REDIS_PASSWORD}" ]
    env_file:
      - '.env'
    ports:
      - "6379:6379"

  tg_bot:
    image: "bot"
    restart: always
    stop_signal: SIGINT
    container_name: tracker_bot-container
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
    env_file:
      - '.env'
    depends_on:
      - postgres_db
      - redis
      - telegram-api-server
    ports:
      - "9099:9099"


volumes:
  telegram-bot-api-data:
    driver: "local"

  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:
